# Generated by Django 4.2.4 on 2023-08-31 12:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('location', models.CharField(max_length=35)),
                ('company_observed', models.CharField(max_length=20)),
                ('activity_observed', models.CharField(choices=[('Lifting/Rigging', 'Lifting/Rigging'), ('Piping', 'Piping'), ('Electrical/Instrument', 'Electrical/Instrument'), ('Hauling (Truck Operations)', 'Hauling (Truck Operations)'), ('Scaffolding', 'Scaffolding'), ('Refueling Operations', 'Refueling Operations'), ('Inspection/Testing', 'Inspection/Testing'), ('Insulation', 'Insulation'), ('General Labor/Preservation', 'General Labor/Preservation'), ('Blasting/Coating', 'Blasting/Coating'), ('Carpentry', 'Carpentry'), ('Welding Activity/Cutting', 'Welding Activity/Cutting'), ('Structural Steel/Erection', 'Structural Steel/Erection'), ('Concrete/Grout/Masonry', 'Concrete/Grout/Masonry'), ('Office', 'Office')], default=None, max_length=27)),
                ('i_observed', models.CharField(choices=[('Unsafe Condition', 'Unsafe Condition'), ('Unsafe act', 'Unsafe act'), ('Positive observation', 'Positive observation')], default='None', max_length=21)),
                ('possible_consequences', multiselectfield.db.fields.MultiSelectField(choices=[('Injury/Illness', 'Injury/Illness'), ('Environmental damage/spill', 'Environmental damage/spill'), ('Equipment/property damage/loss', 'Equipment/property damage/loss'), ('Fire', 'Fire'), ('Motor vehicle accident', 'Motor vehicle accident')], max_length=255)),
                ('conditions_related', multiselectfield.db.fields.MultiSelectField(choices=[('Barricade/hole cover', 'Barricade/hole cover'), ('Confined space', 'Confined space'), ('Crane/Rigging/Certifications/Plans', 'Crane/Rigging/Certifications/Plans'), ('Energy isolation (LOTO)', 'Energy isolation (LOTO)'), ('Excavation', 'Excavation'), ('Slip/trip/fall', 'Slip/trip/fall'), ('Fire', 'Fire'), ('Housekeeping', 'Housekeeping'), ('Hot work', 'Hot work'), ('Work permits/PPHA/JSA', 'Work permits/PPHA/JSA'), ('Spill', 'Spill'), ('Dropped Object/Gravity', 'Dropped Object/Gravity'), ('Respiratory', 'Respiratory'), ('Human and machine interface (HMI)', 'Human and machine interface (HMI)'), ('Ladder/work platform', 'Ladder/work platform'), ('Working @ Heights', 'Working @ Heights'), ('Material handling', 'Material handling'), ('Motorized equipment/vehicle', 'Motorized equipment/vehicle'), ('PPE', 'PPE'), ('Procedure compliance', 'Procedure compliance'), ('Manual Handling', 'Manual Handling'), ('Tools/equipment', 'Tools/equipment'), ('Pinch point/Line of fire', 'Pinch point/Line of fire'), ('Winterization', 'Winterization'), ('Lighting/Illumination', 'Lighting/Illumination'), ('Hand protection', 'Hand protection')], max_length=500)),
                ('description', models.CharField(max_length=300)),
                ('swa_applied', models.BooleanField(default=False)),
                ('corrective_measures', models.BooleanField(default=False)),
                ('further_action', models.BooleanField(default=False)),
                ('corrective_action', models.CharField(max_length=150)),
                ('reported', models.BooleanField(default=False)),
                ('if_reported', models.CharField(max_length=150)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'survey',
                'verbose_name_plural': 'surveys',
            },
        ),
    ]
